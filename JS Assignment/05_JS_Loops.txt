Question 1: Explain the different types of loops in JavaScript (for, while, do-while). Provide a
basic example of each.

In JavaScript, loops are used to execute a block of code repeatedly until a specified condition is met. The main types of loops are:

For Loop: The for loop is used when the number of iterations is known in advance. It consists of an initialization, a condition, and an increment/decrement step, all in one line.
Example:
for (let i = 1; i <= 5; i++) {
    console.log(i); // Output: 1 2 3 4 5
}

While Loop: The while loop executes a block of code as long as the specified condition is true. It is useful when the number of iterations is not predetermined.
Example:

let i = 1;
while (i <= 5) {
    console.log(i); // Output: 1 2 3 4 5
    i++;
}


Do-While Loop: The do-while loop is similar to the while loop but guarantees at least one execution of the code block, as the condition is checked after the loop runs.
Example:

let i = 1;
do {
    console.log(i); // Output: 1 2 3 4 5
    i++;
} while (i <= 5);

Each loop is suited to different use cases, with for being ideal for finite iterations, while for conditional execution, and do-while for at least one guaranteed execution.

*****************************************************************************************

Question 2: What is the difference between a while loop and a do-while loop?

The primary difference between a while loop and a do-while loop in JavaScript lies in when the condition is evaluated. In a while loop, the condition is checked before the code block executes, meaning the loop might not run at all if the condition is false from the start. In contrast, a do-while loop executes the code block first and then checks the condition, ensuring that the code runs at least once, regardless of whether the condition is true. This makes the do-while loop useful for scenarios where the code must execute at least once, such as taking user input or initializing values.