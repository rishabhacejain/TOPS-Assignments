Question 1: What are JavaScript events? Explain the role of event listeners


JavaScript events are actions or occurrences that happen in the browser, such as user interactions (clicking a button, typing in a field) or browser-triggered actions (loading a page, resizing a window). Events allow developers to make web pages dynamic and interactive by responding to these actions. Event listeners play a crucial role by "listening" for specific events and executing a defined callback function when the event occurs. For example, using addEventListener(), a developer can attach a click event to a button and define what should happen when the button is clicked. This approach keeps code organized and enhances user experience.

*********************************************************************************************************

Question 2: How does the addEventListener() method work in JavaScript? Provide
anexample.


The addEventListener() method in JavaScript is used to attach an event handler to a specified element without overwriting existing event handlers. It listens for a specific event (like click, mouseover, or keydown) and executes a callback function when the event occurs. This method allows adding multiple event handlers to the same element for the same or different events. For example:

document.getElementById("myButton").addEventListener("click", function() {
    alert("Button clicked!");
});

In this example, the click event is added to a button with the ID myButton, and when the button is clicked, the alert displays "Button clicked!".